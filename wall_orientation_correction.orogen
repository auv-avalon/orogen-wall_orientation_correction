name "wall_orientation_correction"
# version "0.1"

import_types_from "base"
using_library "sonar_detectors"

task_context "Task" do

    # Wall estimation settings
    property("initial_wall_direction", '/base/Angle').
        doc("the initial angle to the wall in the local coordinate frame")
    property("left_opening_angle",'/base/Angle').
        doc("opening angle to the left of the supposed wall direction, always positive")
    property("right_opening_angle",'/base/Angle').
        doc("opening angle to the right of the supposed wall direction, always positive")
    property("ransac_min_inlier", 'double', 0.5).
        doc("minimum amount of inliers the ransac line model should have")
    property("ransac_max_distance", 'double', 0.3).
        doc("maximum distance of the measurements to the model line to be considered as inlier")
    property("wall_distance_sigma", 'double', 0.2).
        doc("maximum allowed sigma of the estimated wall angle")
    property("wall_angle_sigma", 'double', 0.1).
        doc("maximum allowed sigma of the estimated distance of the wall")
    property("wall_candidate_count", 'int', 3).
        doc("amount of wall candidates to check for stability")
        
    # The target frame in the generated poses
    property 'target_frame', '/std/string', 'world_orientation'
        

    input_port('sonarbeam_feature', '/base/samples/LaserScan').
        needs_reliable_connection.
        doc("newest sonar feature")
        
    input_port('orientation_samples', '/base/samples/RigidBodyState').
        needs_reliable_connection.
        doc("orientation samples from the IMU")
        
        
    output_port('orientation_in_world', '/base/samples/RigidBodyState').
        doc("body state in world orientation")
        
    output_port('angle_in_world', '/base/Angle').
        doc("the angle of the robot in the world frame")


    ## transformer config
    transformer do
        max_latency( 0.5 )

	transformation("sonar", "body")
        transformation("body", "odometry")
        transformation("wall", "world")

        align_port("sonarbeam_feature", 0.1)
	align_port("orientation_samples", 0.01)
    end


    ## states
    runtime_states :MISSING_TRANSFORMATION, :ESTIMATE_WALL_ORIENTATION, :VALID_WALL_FIX


    port_driven
end

task_context "OrientationInMap" do
    
    input_port('orientation_in_world', '/base/samples/RigidBodyState').
        needs_reliable_connection.
        doc("body state in world coordinates")
        
    output_port('orientation_in_map', '/base/samples/RigidBodyState').
        doc("body state in map orientation")

    transformer do
        max_latency( 0.2 )

        transformation("map", "world")

	align_port("orientation_in_world", 0.01)
    end
    
    runtime_states :MISSING_TRANSFORMATION
    
    port_driven
end


